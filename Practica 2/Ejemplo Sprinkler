Esto Esta copiado de la consola por tanto para usar los comandos hay que quitar >> y si no tienen >> son salidas por pantalla y si tienen // son comentarios mios de la instruccion o salida por pantalla


>> addpath('~/asigDSIC/ETSINF/apr/p2/BNT')
>> addpath(genpathKPM('~/asigDSIC/ETSINF/apr/p2/BNT'))
>> N = 4; C = 1; S = 2; R = 3; W = 4;
>> grafo = zeros(N, N);
>> grafo(C,[R S]) = 1;
>> grafo(R,W)     = 1;
>> grafo(S,W)     = 1;
>> grafo(grafo(C,[R S])
>> nodosDiscretos = 1:N;
>> tallaNodos = 2*ones(1,N);
>> redB = mk_bnet(grafo, tallaNodos, 'discrete', nodosDiscretos);
>> redB.CPD{C} = tabular_CPD(redB, C, [0.5 0.5]);
>> redB.CPD{S} = tabular_CPD(redB, S, [0.5 0.9 0.5 0.1]);
>> redB.CPD{R} = tabular_CPD(redB, R, [0.8 0.2 0.2 0.8]);
>> redB.CPD{W} = tabular_CPD(redB, W, [1.0 0.1 0.1 0.01 0.0 0.9 0.9 0.99]);
>> motor = jtree_inf_engine(redB);
//Distribuciones condicionales                      
>> evidencia = cell(1, N);                                                 
>> evidencia{W} = 2;                                                       
>> [motor, logVerosim] = enter_evidence(motor, evidencia);
>> m = marginal_nodes(motor, S);
>> m

m = 

  struct with fields:

    domain: 2
         T: [2Ã—1 double]
        mu: []
     Sigma: []

>> m.T

ans =

    0.5702 //=> P(S = 1|W= 2)
    0.4298 //=> P(S = 2|W= 2)

>> evidencia{R} = 2;
>> evidencia{W} = 2;
>> [motor, logVerosim] = enter_evidence(motor, evidencia);
>> m = marginal_nodes(motor, S);                          
>> m.T                                                    

ans =

    0.8055 //=> P(S = 1|R= 2,W= 2)
    0.1945 //=> P(S = 2|R= 2,W= 2)
>> 
// Nodos observados
>> evidencia = cell(1, N);
>> evidencia{W} = 2;
>> motor = enter_evidence(motor, evidencia);
>> m = marginal_nodes(motor, W);
>> m.T

ans =

    1.0000

>> m = marginal_nodes(motor, W, 1);
>> m.T                             

ans =

         0 //=> P(W = 1|W= 2)
    1.0000 //=> P(W = 2|W= 2)
// Distribuciones Conjuntas

>> evidencia = cell(1,N);
>> [motor, logVerosimi] = enter_evidence(motor, evidencia);
>> m = marginal_nodes(motor, [S R W]);
>> m.T
//ans(2,1,1) = P(S=2,R=1,W=1=
ans(:,:,1) =

    0.2900 //(1,1,1)    0.0410//(1,2,1)
    0.0210    0.0009


ans(:,:,2) =

    0	//(1,1,2)    0.3690 // (1,2,2)
    0.1890    		 0.0891

// Me quede por la pagina 6

